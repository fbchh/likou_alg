"""
贪心的本质是选择每一阶段的局部最优，从而达到全局最优。
这么说有点抽象，来举一个例子：
    例如，有一堆钞票，你可以拿走十张，如果想达到最大的金额，你要怎么拿？
    指定每次拿最大的，最终结果就是拿走最大数额的钱。
    每次拿最大的就是局部最优，最后拿走最大数额的钱就是推出全局最优。
    再举一个例子如果是 有一堆盒子，你有一个背包体积为n，如何把背包尽可能装满，如果还每次选最大的盒子，就不行了。这时候就需要动态规划。
"""


def solve(g, s):
    g.sort()
    s.sort()
    i, j = len(g) - 1, len(s) - 1
    res = 0
    while i >= 0 and j >= 0:
        if s[j] >= g[i]:
            res += 1
            j -= 1
        i -= 1

    return res


if __name__ == "__main__":
    tst_ege_g = [1, 2, 3]
    tst_ege_s = [1, 1]
    print(solve(tst_ege_g, tst_ege_s))
    ...
