"""
二叉树6、8、9、10总结

    翻转二叉树
        除开中序遍历的顺序对翻转操作不太友好，基于其他遍历方式去翻转“当前节点”的左右孩子都行
    对称二叉树
        判断左右子树是否可翻转 采用递归、迭代（栈、队列）均可
    二叉树最大深度
        第一想法是层序遍历 除此之外官方还还给出了递归法（尤其是基于前序遍历的做法，体现了回溯）
    二叉树最小深度
        注意最小深度的概念（看官网） 注意前序、后序递归法的区别（入参、以及终止条件的返回值）
"""


def solve():
    ...


if __name__ == "__main__":
    ...
